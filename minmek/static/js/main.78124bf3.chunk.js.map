{"version":3,"sources":["features/tools/toolConstants.js","features/tabs/tabConstants.js","features/mechs/mechsConstants.js","features/entities/entitySelectors.js","features/pilots/Pilot.js","features/mechs/MechDesign.js","features/mechs/Mech.js","features/unitInfo/Unit.js","features/unitInfo/Lance.js","features/unitInfo/Faction.js","app/schema/schema.js","features/editing/editingConstants.js","features/pilots/pilotsConstants.js","features/tabs/Tab.jsx","features/tabs/TabBar.jsx","features/tabs/tabSelectors.js","features/tabs/TabBarContainer.jsx","features/tabs/tabActions.js","features/unitInfo/UnitOrganizationTree/LancePilot.jsx","features/unitInfo/UnitOrganizationTree/Lance.jsx","features/unitInfo/UnitOrganizationTree/UnitOrganizationTree.jsx","features/modals/modalActions.js","common/utils/clientUtils.js","common/components/FormEditWrapper.jsx","common/components/ColorPicker/ColorPickerButton.jsx","features/unitInfo/unitInfoSelectors.js","features/unitInfo/unitInfoActions.js","features/unitInfo/UnitInfo/UnitInfoForm.jsx","common/components/ColorPicker/colorPickerActions.js","features/unitInfo/UnitInfo/UnitInfo.jsx","features/pilots/PilotsList/PilotsListHeader.jsx","features/entities/entityActions.js","features/contextMenus/contextMenuActions.js","features/pilots/PilotsList/PilotsListRow.jsx","features/editing/editingActions.js","features/pilots/pilotsSelectors.js","features/pilots/pilotsActions.js","features/pilots/PilotsList/PilotsList.jsx","features/pilots/PilotDetails/PilotDetails.jsx","features/pilots/PilotDetails/PilotCommands.jsx","features/pilots/Pilots/Pilots.jsx","features/mechs/MechsList/MechsListHeader.jsx","features/mechs/mechSelectors.js","features/mechs/MechsList/MechsListRow.jsx","features/mechs/MechsList/MechsList.jsx","features/mechs/mechsActions.js","features/mechs/MechDetails/MechDetails.jsx","features/mechs/Mechs/Mechs.jsx","data/sampleData.js","features/tools/Tools/Tools.jsx","features/tools/toolActions.js","data/mockAPI.js","features/modals/TestModal.jsx","common/components/ColorPicker/ColorPickerDialog.jsx","features/modals/ModalManager.jsx","common/components/AbsolutePosition.jsx","features/contextMenus/ContextMenu.jsx","features/contextMenus/TestContextMenu.jsx","features/pilots/PilotsList/PilotsListItemMenu.jsx","features/contextMenus/contextMenuSelectors.js","features/contextMenus/ContextMenuManager.jsx","app/layout/App.js","common/utils/reducerUtils.js","app/reducers/entitiesReducer.js","app/reducers/editingEntitiesReducer.js","features/tabs/tabReducer.js","features/unitInfo/unitInfoReducer.js","features/pilots/pilotsReducer.js","features/mechs/mechsReducer.js","features/modals/modalReducer.js","features/contextMenus/contextMenuReducer.js","features/entities/entityReducer.js","common/utils/modelUtils.js","features/editing/editingUtils.js","features/editing/editingReducer.js","app/reducers/rootReducer.js","index.js","app/store/configureStore.js","features/entities/entityConstants.js","features/editing/editingSelectors.js","features/unitInfo/unitInfoConstants.js","features/modals/modalConstants.js","features/contextMenus/contextMenuConstants.js"],"names":["DATA_LOADED","TAB_SELECTED","MECH_SELECT","selectEntities","state","entities","getEntitiesSession","createSelector","orm","session","getUnsharedEntitiesSession","defaultAttributes","name","rank","gunnery","piloting","age","Pilot","this","ref","otherPilot","update","pilotData","upsert","newAttributes","combinedAttributes","create","id","attr","mech","fk","Model","modelName","MechDesign","otherDesign","designData","Mech","otherMech","mechData","type","pilot","Unit","unitData","Lance","parsedData","lances","map","lanceEntry","parse","pilots","pilotEntry","mechs","mechEntry","fields","affiliation","color","many","lanceData","Faction","factionData","ORM","register","EDIT_ITEM_EXISTING","EDIT_ITEM_NEW","EDIT_ITEM_UPDATE","EDIT_ITEM_APPLY","EDIT_ITEM_STOP","EDIT_ITEM_RESET","PILOT_SELECT","PILOT_EDIT_START","PILOT_EDIT_STOP","PILOT_RANKS","Tab","label","onClick","active","Menu","Item","content","TabBar","props","tabs","currentTab","onTabClick","otherProps","tabItems","tabInfo","key","tabPanels","TabComponent","component","show","tabular","attached","selectCurrentTab","actions","tabName","payload","connect","UNKNOWN_PILOT","UNKNOWN_MECH","ownProps","hasId","pilotID","pilotModel","withId","mechModel","mechName","List","Icon","Content","Header","UNKNOWN_LANCE","lance","lanceID","lanceModel","toRefArray","lancePilots","UNKNOWN_UNIT","unit","faction","unitModel","all","first","factionName","colorBlock","style","marginLeft","backgroundColor","border","height","width","displayText","lanceEntries","size","display","openModal","modalType","modalProps","MODAL_OPEN","closeModal","MODAL_CLOSE","getValueFromEvent","e","newValues","target","value","checked","isObject","FormEditWrapper","onChildChange","isEditing","change","setState","dispatchAttributeChange","boundDispatchAttributes","bind","debounce","dispatchDelay","onChange","propsValue","children","passIsEditing","valuePropName","onChangePropName","singleValue","stateValue","currentValues","defaults","valueToPassDown","values","editingValue","child","React","Children","only","cloneElement","Component","defaultProps","noop","ColorPickerButton","disabled","Button","padding","margin","selectCurrentUnitInfo","currentUnitModel","currentUnitInfo","setUnitColor","UNIT_INFO_SET_COLOR","updateUnitInfo","UNIT_INFO_UPDATE","showColorPicker","initialColor","onColorPickedAction","onColorPicked","UnitInfoForm","onAffiliationChanged","result","onNameChanged","onColorClicked","unitInfo","factions","isDisplayingUnit","Boolean","displayFactions","text","Form","Field","placeholder","Group","Dropdown","selection","options","UnitInfo","Segment","Grid","Column","as","PilotsListHeader","Table","Row","HeaderCell","deleteEntity","itemType","itemID","ENTITY_DELETE","showContextMenu","x","y","menuArgs","CONTEXT_MENU_SHOW","location","hideContextMenu","CONTEXT_MENU_HIDE","mechType","onPilotClicked","_","selected","onContextMenu","preventDefault","stopPropagation","pageX","pageY","pilotId","Cell","compact","basic","circular","icon","applyItemEdits","stopEditingItem","selectPilots","selectCurrentPilot","currentPilot","selectIsEditingPilot","selectPilot","dispatch","getState","cancelEditingPilot","handleStopEditingPilot","applyEdits","isNewPilot","PilotsList","pilotRows","celled","Body","toModelArray","getId","RANKS","SKILL_VALUES","MECHS","startEditingPilot","stopEditingPilot","editItemAttributes","newItemAttributes","resetEditedItem","PilotDetails","onInputChanged","onDropdownChanged","onStartEditingClicked","onStopEditingClicked","onResetClicked","pilotIsSelected","isEditingPilot","canStartEditing","canStopEditing","control","fluid","widths","primary","marginRight","secondary","negative","getEditingEntitiesSession","addNewPilot","cuid","pilotContents","generate","toJSON","Pilots","MechsListHeader","WEIGHT_CLASSES","weights","getWeightClass","weight","find","wc","includes","selectCurrentMech","currentMech","mechID","onMechClicked","weightClass","selectMech","MechsList","mechRows","Mechs","sampleData","designs","loadUnitData","Promise","resolve","then","data","Tools","onShowContextMenuClicked","TestModal","onNextModalClick","counter","Modal","closeIcon","open","onClose","image","Description","Actions","colorSelected","actionToDispatch","newAction","cloneDeep","ColorPickerDialog","onSelectClicked","onSelectedColorChanged","colorEvent","hex","onChangeComplete","positive","modalComponentLookupTable","ModalManager","renderedModals","currentModals","modalDescription","index","ModalComponent","modals","AbsolutePosition","nodeRef","position","top","bottom","left","right","className","ContextMenu","handleClickOutside","node","contains","document","addEventListener","removeEventListener","TestContextMenu","vertical","PilotsListItemMenu","onDeleteClicked","selectContextMenu","contextMenu","menuTypes","ContextMenuManager","menu","MenuComponent","isOpened","App","inverted","Container","TabBarContainer","createReducer","initialState","fnMap","handler","createConditionalSliceReducer","sliceName","sliceReducer","action","getEmptyState","forEach","modelType","model","delete","design","currentUnit","prevSelectedPilot","newSelectedPilot","isSamePilot","prevSelectedMech","newSelectedMech","concat","newState","slice","pop","contextMenuInitialState","undefined","updateEntity","ModelClass","createEntity","entityCrudFeatureReducer","ENTITY_UPDATE","ENTITY_CREATE","getModelByType","updateEditingEntitiesState","updatedEditingEntities","editingEntities","copyEntity","sourceEntities","destinationEntities","readEntityData","editItemExisting","selectEditingEntities","editItemStop","editingFeatureReducer","updatedEntities","updateEntitiesState","readSession","writeSession","existingItem","updateFrom","itemContents","updateEditedEntity","rootReducer","reducers","previous","current","reduce","p","r","reduceReducers","combineReducers","entitiesReducer","editingEntitiesReducer","pilotsReducer","mechsReducer","tabReducer","modalsReducer","contextMenuReducer","entityCrudReducer","unitInfoReducer","store","preloadedState","middlewares","thunk","storeEnhancers","applyMiddleware","composedEnhancer","composeWithDevTools","createStore","configureStore","rootEl","getElementById","require","default","ReactDOM","render"],"mappings":"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","file":"static/js/main.78124bf3.chunk.js","sourcesContent":["export const DATA_LOADED = \"DATA_LOADED\";","export const TAB_SELECTED = \"TAB_SELECTED\";","export const MECH_SELECT = \"MECH_SELECT\";","import {createSelector} from \"reselect\";\r\n\r\nimport orm from \"app/schema\";\r\n\r\nexport const selectEntities = state => state.entities;\r\n\r\nexport const getEntitiesSession = createSelector(\r\n    selectEntities,\r\n    entities => orm.session(entities)\r\n);\r\n\r\nexport const getUnsharedEntitiesSession = (state) => {\r\n    const entities = selectEntities(state);\r\n    return orm.session(entities);\r\n}","import {Model, fk, attr} from \"redux-orm\";\r\n\r\nconst defaultAttributes = {\r\n    name : \"New Pilot\",\r\n    rank : \"Private\",\r\n    gunnery : 4,\r\n    piloting : 5,\r\n    age : 25,\r\n};\r\n\r\n\r\nexport default class Pilot extends Model {\r\n    static get fields() {\r\n        return {\r\n            id : attr(),\r\n            name : attr(),\r\n            rank : attr(),\r\n            gunnery : attr(),\r\n            piloting : attr(),\r\n            age : attr(),\r\n            mech : fk(\"Mech\"),\r\n        };\r\n    }\r\n\r\n    static parse(pilotData) {\r\n        // We could do useful stuff in here with relations,\r\n        // but since we have no relations yet, all we need\r\n        // to do is pass the pilot data on to create()\r\n\r\n        // Note that in a static class method, `this` is the\r\n        // class itself, not an instance\r\n        return this.upsert(pilotData);\r\n    }\r\n\r\n    static generate(newAttributes = {}) {\r\n        const combinedAttributes = {\r\n            ...defaultAttributes,\r\n            ...newAttributes,\r\n        };\r\n\r\n        return this.create(combinedAttributes);\r\n    }\r\n\r\n    toJSON() {\r\n        return {...this.ref};\r\n    }\r\n\r\n    updateFrom(otherPilot) {\r\n        this.update(otherPilot.ref);\r\n    }\r\n}\r\n\r\nPilot.modelName = \"Pilot\";","import {Model, attr} from \"redux-orm\";\r\n\r\nexport default class MechDesign extends Model {\r\n\r\n    static get fields() {\r\n        return {\r\n            id : attr(),\r\n        };\r\n    }\r\n\r\n    static parse(designData) {\r\n        return this.upsert(designData);\r\n    }\r\n\r\n    toJSON() {\r\n        return {...this.ref};\r\n    }\r\n\r\n    updateFrom(otherDesign) {\r\n        this.update(otherDesign.ref);\r\n    }\r\n}\r\n\r\nMechDesign.modelName = \"MechDesign\";","import {Model, fk, attr} from \"redux-orm\";\r\n\r\n\r\nexport default class Mech extends Model {\r\n    static get fields() {\r\n        return {\r\n            id : attr(),\r\n            type : fk(\"MechDesign\"),\r\n            pilot : fk(\"Pilot\"),\r\n        };\r\n    }\r\n    \r\n    static parse(mechData) {\r\n        return this.upsert(mechData);\r\n    }\r\n\r\n    toJSON() {\r\n        return {...this.ref};\r\n    }\r\n\r\n    updateFrom(otherMech) {\r\n        this.update(otherMech.ref);\r\n    }\r\n}\r\n\r\nMech.modelName = \"Mech\";","import {Model, many, fk, attr} from \"redux-orm\";\r\n\r\n\r\nexport default class Unit extends Model {\r\n    static modelName = \"Unit\";\r\n\r\n    static fields = {\r\n        id : attr(),\r\n        name : attr(),\r\n        affiliation : fk(\"Faction\"),\r\n        color : attr(),\r\n        lances : many(\"Lance\"),\r\n        pilots : many(\"Pilot\"),\r\n        mechs : many(\"Mech\")\r\n    };\r\n\r\n    static parse(unitData) {\r\n        const {Pilot, Mech, Lance} = this.session;\r\n\r\n        const parsedData = {\r\n            ...unitData,\r\n            lances : unitData.lances.map(lanceEntry => Lance.parse(lanceEntry)),\r\n            pilots : unitData.pilots.map(pilotEntry => Pilot.parse(pilotEntry)),\r\n            mechs : unitData.mechs.map(mechEntry => Mech.parse(mechEntry)),\r\n        };\r\n\r\n        return this.upsert(parsedData);\r\n    }\r\n}\r\n\r\n","import {Model, many, attr} from \"redux-orm\";\r\n\r\n\r\nexport default class Lance extends Model {\r\n    static modelName = \"Lance\";\r\n\r\n    static fields = {\r\n        id : attr(),\r\n        name : attr(),\r\n        pilots : many(\"Pilot\")\r\n    };\r\n\r\n    static parse(lanceData) {\r\n        return this.upsert(lanceData);\r\n    }\r\n\r\n}\r\n","import {Model, attr} from \"redux-orm\";\r\n\r\n\r\nexport default class Faction extends Model {\r\n    static modelName = \"Faction\";\r\n\r\n    static fields = {\r\n        id : attr(),\r\n        name : attr(),\r\n    };\r\n\r\n    static parse(factionData) {\r\n        return this.upsert(factionData);\r\n    }\r\n}\r\n\r\n","import {ORM } from \"redux-orm\";\r\n\r\nimport Pilot from \"features/pilots/Pilot\";\r\nimport MechDesign from \"features/mechs/MechDesign\";\r\nimport Mech from \"features/mechs/Mech\";\r\nimport Unit from \"features/unitInfo/Unit\";\r\nimport Lance from \"features/unitInfo/Lance\";\r\nimport Faction from \"features/unitInfo/Faction\";\r\n\r\nconst orm = new ORM();\r\norm.register(Pilot, MechDesign, Mech, Unit, Faction, Lance);\r\n\r\nexport default orm;","export const EDIT_ITEM_EXISTING = \"EDIT_ITEM_EXISTING\";\r\nexport const EDIT_ITEM_NEW = \"EDIT_ITEM_NEW\";\r\nexport const EDIT_ITEM_UPDATE = \"EDIT_ITEM_UPDATE\";\r\nexport const EDIT_ITEM_APPLY = \"EDIT_ITEM_APPLY\";\r\nexport const EDIT_ITEM_STOP = \"EDIT_ITEM_STOP\";\r\nexport const EDIT_ITEM_RESET = \"EDIT_ITEM_RESET\";","export const PILOT_SELECT = \"PILOT_SELECT\";\r\nexport const PILOT_EDIT_START = \"PILOT_EDIT_START\";\r\nexport const PILOT_EDIT_STOP = \"PILOT_EDIT_STOP\";\r\n\r\n\r\nexport const PILOT_RANKS = [\r\n    \"Private\",\r\n    \"Corporal\",\r\n    \"Sergeant\",\r\n    \"Lieutenant\",\r\n    \"Captain\",\r\n    \"Major\",\r\n    \"Colonel\",\r\n];","import React from \"react\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nconst Tab = ({name, label, onClick, active}) => (\r\n    <Menu.Item\r\n        name={name}\r\n        content={label}\r\n        active={active}\r\n        onClick={() => onClick(name)}\r\n    />\r\n);\r\n\r\nexport default Tab;","import React from \"react\";\r\nimport {Menu} from \"semantic-ui-react\";\r\nimport ToggleDisplay from 'react-toggle-display';\r\n\r\nimport Tab from \"./Tab\";\r\n\r\nconst TabBar = (props) => {\r\n    const {tabs, currentTab, onTabClick, ...otherProps} = props;\r\n\r\n    const tabItems = tabs.map(tabInfo => {\r\n        const {name, label} = tabInfo;\r\n\r\n        return (\r\n            <Tab\r\n                key={name}\r\n                name={name}\r\n                label={label}\r\n                active={currentTab === name}\r\n                onClick={onTabClick}\r\n            />\r\n        );\r\n    });\r\n\r\n    const tabPanels = tabs.map(tabInfo => {\r\n        const {name, component : TabComponent} = tabInfo;\r\n\r\n        return (\r\n            <ToggleDisplay show={name === currentTab} key={name}>\r\n                <TabComponent />\r\n            </ToggleDisplay>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Menu tabular attached=\"top\" {...otherProps}>\r\n                {tabItems}\r\n            </Menu>\r\n\r\n            {tabPanels}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabBar;\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const selectTabs = state => state.tabs;\r\n\r\nexport const selectCurrentTab = createSelector(\r\n    selectTabs,\r\n    tabs => tabs.currentTab\r\n);","import {connect} from \"react-redux\";\r\n\r\nimport TabBar from \"./TabBar\";\r\n\r\nimport {selectCurrentTab} from \"./tabSelectors\";\r\nimport {selectTab} from \"./tabActions\";\r\n\r\nconst mapState = (state) => {\r\n    const currentTab = selectCurrentTab(state);\r\n\r\n    return {currentTab};\r\n}\r\n\r\nconst actions = {onTabClick : selectTab};\r\n\r\nexport default connect(mapState, actions)(TabBar);","import {TAB_SELECTED} from \"./tabConstants\";\r\n\r\nexport function selectTab(tabName) {\r\n    return {\r\n        type : TAB_SELECTED,\r\n        payload : {tabName},\r\n    };\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    List,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Pilot} = session;\r\n\r\n    let pilot, mech;\r\n\r\n    if(Pilot.hasId(ownProps.pilotID)) {\r\n        const pilotModel = Pilot.withId(ownProps.pilotID);\r\n\r\n        pilot = pilotModel.ref;\r\n\r\n        if(pilotModel.mech) {\r\n            mech = pilotModel.mech.type.ref;\r\n        }\r\n    }\r\n\r\n    return {pilot, mech};\r\n};\r\n\r\nconst UNKNOWN_PILOT =  {name : \"Unknown\", rank : \"\"}\r\nconst UNKNOWN_MECH = {id : \"N/A\", name : \"\"};\r\n\r\nconst LancePilot = ({pilot = UNKNOWN_PILOT, mech = UNKNOWN_MECH}) => {\r\n    const {name, rank} = pilot;\r\n    const {id : mechModel, name : mechName} = mech;\r\n\r\n    return (\r\n        <List.Item>\r\n            <List.Icon name=\"user\" />\r\n            <List.Content>\r\n                <List.Header>{rank} {name} - {mechModel} {mechName}</List.Header>\r\n            </List.Content>\r\n        </List.Item>\r\n    )\r\n};\r\n\r\n\r\nexport default connect(mapState)(LancePilot);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    List,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport LancePilot from \"./LancePilot\";\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Lance} = session;\r\n\r\n    let lance, pilots;\r\n\r\n    if(Lance.hasId(ownProps.lanceID)) {\r\n        const lanceModel = Lance.withId(ownProps.lanceID);\r\n\r\n        lance = lanceModel.ref;\r\n        pilots = lanceModel.pilots.toRefArray().map(pilot => pilot.id);\r\n    }\r\n\r\n    return {lance, pilots};\r\n};\r\n\r\nconst UNKNOWN_LANCE =  {name : \"Unknown\"}\r\n\r\nconst Lance = ({lance = UNKNOWN_LANCE, pilots = []}) => {\r\n    const {name} = lance;\r\n\r\n    const lancePilots = pilots.map(pilotID => <LancePilot key={pilotID} pilotID={pilotID} />);\r\n\r\n    return (\r\n        <List.Item>\r\n            <List.Icon name=\"cube\" />\r\n            <List.Content>\r\n                <List.Header>{name}</List.Header>\r\n                <List.List>\r\n                    {lancePilots}\r\n                </List.List>\r\n            </List.Content>\r\n        </List.Item>\r\n    )\r\n};\r\n\r\n\r\nexport default connect(mapState)(Lance);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    List,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport Lance from \"./Lance\";\r\n\r\nconst mapState = (state) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Unit} = session;\r\n\r\n    let unit, faction, lances;\r\n\r\n    const unitModel = Unit.all().first();\r\n\r\n    if(unitModel) {\r\n        unit = unitModel.ref;\r\n        faction = unitModel.affiliation.ref;\r\n        lances = unitModel.lances.toRefArray().map(lance => lance.id);\r\n    }\r\n\r\n    return {unit, faction, lances};\r\n}\r\n\r\nconst UNKNOWN_UNIT = {name : \"Unknown\"};\r\n\r\n\r\n\r\nconst UnitOrganizationTree = ({unit = UNKNOWN_UNIT, faction = {}, lances = []}) => {\r\n    const {name, color} = unit;\r\n    const {name : factionName} = faction;\r\n\r\n    const colorBlock = <div\r\n        style={{\r\n            marginLeft : 10,\r\n            backgroundColor : color,\r\n            border : \"1px solid black\",\r\n            height : 20,\r\n            width : 40,\r\n        }}\r\n    />;\r\n\r\n    const displayText = factionName ? `${name} / ${factionName}` : name;\r\n\r\n\r\n    const lanceEntries = lances.map(lanceID => <Lance key={lanceID} lanceID={lanceID} />);\r\n\r\n    return (\r\n        <List size=\"large\">\r\n            <List.Item>\r\n                <List.Icon name=\"cubes\" />\r\n                <List.Content>\r\n                    <List.Header style={{display : \"flex\"}}>{displayText} {colorBlock}</List.Header>\r\n                    <List.List>\r\n                        {lanceEntries}\r\n                    </List.List>\r\n                </List.Content>\r\n            </List.Item>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default connect(mapState)(UnitOrganizationTree);","import {\r\n    MODAL_CLOSE,\r\n    MODAL_OPEN\r\n} from \"./modalConstants\";\r\n\r\nexport function openModal(modalType, modalProps) {\r\n    return {\r\n        type : MODAL_OPEN,\r\n        payload : { modalType, modalProps}\r\n    };\r\n}\r\n\r\nexport function closeModal() {\r\n    return {\r\n        type : MODAL_CLOSE\r\n    };\r\n}","import {isObject} from \"lodash\";\r\n\r\nexport function getValueFromEvent(e) {\r\n    const {target} = e;\r\n\r\n    let newValues;\r\n\r\n    if(target) {\r\n        const value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n        newValues = {\r\n            [target.name] : value,\r\n        };\r\n    }\r\n    else if(isObject(e)) {\r\n        newValues = e;\r\n    }\r\n\r\n    return newValues;\r\n}\r\n\r\nexport const noop = () => {};","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {noop, debounce, defaults, values} from \"lodash\";\r\n\r\nimport {getValueFromEvent} from \"common/utils/clientUtils\";\r\n\r\nclass FormEditWrapper extends Component {\r\n    static propTypes = {\r\n        value : PropTypes.object.isRequired,\r\n        isEditing : PropTypes.bool,\r\n        onChange : PropTypes.func,\r\n        valuePropName : PropTypes.string,\r\n        onChangePropName : PropTypes.string,\r\n        singleValue : PropTypes.bool,\r\n        passIsEditing : PropTypes.bool,\r\n        dispatchDelay : PropTypes.number,\r\n    }\r\n    \r\n    static defaultProps = {\r\n        isEditing : true,\r\n        onChange : noop,\r\n        valuePropName : \"value\",\r\n        onChangePropName : \"onChange\",\r\n        singleValue : false,\r\n        passIsEditing : true,\r\n        dispatchDelay : 250,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const boundDispatchAttributes = this.dispatchAttributeChange.bind(this);\r\n        this.dispatchAttributeChange = debounce(boundDispatchAttributes, props.dispatchDelay);\r\n\r\n        this.state = {\r\n            value : {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        // Reset any component-local changes  Note that the incoming props\r\n        // SHOULD match the changes we just had in local state.\r\n        this.setState({value : {}});\r\n    }\r\n\r\n    onChildChange = (e) => {\r\n        const {isEditing} = this.props;\r\n\r\n        if(isEditing) {\r\n            const newValues = getValueFromEvent(e);\r\n\r\n            if(newValues) {\r\n                const change = {\r\n                    ...this.state.value,\r\n                    ...newValues\r\n                };\r\n\r\n                // Update our component-local state with these changes, so that the child components\r\n                // will re-render with the new values right away\r\n                this.setState({value : change});\r\n\r\n                // Because this is debounced, we will only call the passed-in props.onChange\r\n                // once there is a pause in changes (like letting go of a held-down key)\r\n                this.dispatchAttributeChange(change);\r\n            }\r\n        }\r\n    }\r\n\r\n    dispatchAttributeChange(change) {\r\n        this.props.onChange(change);\r\n    }\r\n\r\n    render() {\r\n        const {value : propsValue, children} = this.props;\r\n        const {isEditing, passIsEditing, valuePropName, onChangePropName, singleValue} = this.props;\r\n        const {value : stateValue = {}} = this.state;\r\n\r\n        // Use incoming values from props IF there is no corresponding value\r\n        // in local component state.  This allows local changes to win out.\r\n        const currentValues = defaults({}, stateValue, propsValue);\r\n\r\n        let valueToPassDown = currentValues;\r\n\r\n        if(singleValue) {\r\n            valueToPassDown = values(currentValues)[0];\r\n        }\r\n\r\n        const editingValue = passIsEditing ? {isEditing} : {};\r\n\r\n        // Force the child form to re-render itself with these values\r\n        const child = React.Children.only(children);\r\n\r\n        const updatedChild = React.cloneElement(child, {\r\n            [valuePropName] : valueToPassDown,\r\n            [onChangePropName] : this.onChildChange,\r\n            ...editingValue\r\n        });\r\n\r\n        return updatedChild;\r\n    }\r\n}\r\n\r\nexport default FormEditWrapper;\r\n","import React from \"react\";\r\n\r\nimport {Button} from \"semantic-ui-react\";\r\n\r\nconst ColorPickerButton = ({value, onClick, disabled=false}) => {\r\n    return (\r\n        <Button\r\n            type=\"button\"\r\n            style={{padding: \"4px\", margin: 0}}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                style={{\r\n                    width : 30,\r\n                    height : 15,\r\n                    backgroundColor : value\r\n                }}\r\n            />\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ColorPickerButton;","import {createSelector} from \"reselect\";\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nexport const selectUnitInfo = state => state.unitInfo;\r\n\r\n\r\nexport const selectCurrentUnitInfo = createSelector(\r\n    getEntitiesSession,\r\n    (session) => {\r\n        const {Unit} = session;\r\n        const currentUnitModel = Unit.all().first();\r\n\r\n        let currentUnitInfo = null;\r\n\r\n        if(currentUnitModel) {\r\n            currentUnitInfo = currentUnitModel.ref;\r\n        }\r\n\r\n        return currentUnitInfo;\r\n    }\r\n)\r\n","import {\r\n    UNIT_INFO_UPDATE,\r\n    UNIT_INFO_SET_COLOR,\r\n} from \"./unitInfoConstants\";\r\n\r\nexport function updateUnitInfo(values) {\r\n    return {\r\n        type : UNIT_INFO_UPDATE,\r\n        payload : values,\r\n    };\r\n}\r\n\r\nexport function setUnitColor(color) {\r\n    return {\r\n        type : UNIT_INFO_SET_COLOR,\r\n        payload : {color}\r\n    };\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Form,\r\n    Dropdown,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {showColorPicker} from \"common/components/ColorPicker/colorPickerActions\";\r\nimport {getValueFromEvent} from \"common/utils/clientUtils\";\r\n\r\nimport FormEditWrapper from \"common/components/FormEditWrapper\";\r\nimport ColorPickerButton from \"common/components/ColorPicker/ColorPickerButton\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport {selectCurrentUnitInfo} from \"../unitInfoSelectors\";\r\nimport {updateUnitInfo, setUnitColor} from \"../unitInfoActions\";\r\n\r\n\r\n\r\nconst mapState = (state) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Faction} = session;\r\n\r\n    const factions = Faction.all().toRefArray();\r\n\r\n    const unitInfo = selectCurrentUnitInfo(state);\r\n\r\n    return {\r\n        factions,\r\n        unitInfo,\r\n    };\r\n};\r\n\r\nconst actions = {\r\n    updateUnitInfo,\r\n    showColorPicker,\r\n};\r\n\r\nclass UnitInfoForm extends Component {\r\n\r\n    onAffiliationChanged = (e, result) => {\r\n        const {name, value} = result;\r\n\r\n        const newValues = { [name] : value};\r\n        this.props.updateUnitInfo(newValues);\r\n    }\r\n\r\n    onNameChanged = (e) => {\r\n        const newValues = getValueFromEvent(e);\r\n        this.props.updateUnitInfo(newValues);\r\n    }\r\n\r\n    onColorClicked = () => {\r\n        const onColorPickedAction = setUnitColor();\r\n\r\n        this.props.showColorPicker(this.props.unitInfo.color, onColorPickedAction);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unitInfo, factions} = this.props;\r\n        const isDisplayingUnit = Boolean(unitInfo);\r\n        let name = \"\", affiliation = null, color = null;\r\n\r\n        if(isDisplayingUnit) {\r\n            ({name, affiliation, color} = unitInfo);\r\n        }\r\n\r\n        const displayFactions = factions.map(faction => {\r\n            return {\r\n                value : faction.id,\r\n                text : faction.name\r\n            };\r\n        });\r\n\r\n        return (\r\n            <Form size=\"large\">\r\n\r\n                <Form.Field name=\"name\">\r\n                    <label>Unit Name</label>\r\n                    <FormEditWrapper\r\n                        singleValue={true}\r\n                        value={ {name} }\r\n                        onChange={this.onNameChanged}\r\n                        passIsEditing={false}\r\n                    >\r\n                        <input\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            disabled={!isDisplayingUnit}\r\n                        />\r\n                    </FormEditWrapper>\r\n                </Form.Field>\r\n                <Form.Group>\r\n                    <Form.Field name=\"affiliation\" width={12}>\r\n                        <label>Affiliation</label>\r\n                        <Dropdown\r\n                            name=\"affiliation\"\r\n                            selection\r\n                            options={displayFactions}\r\n                            value={affiliation}\r\n                            disabled={!isDisplayingUnit}\r\n                            onChange={this.onAffiliationChanged}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field name=\"color\">\r\n                        <label>Color</label>\r\n                        <ColorPickerButton\r\n                            value={color}\r\n                            disabled={!isDisplayingUnit}\r\n                            onClick={this.onColorClicked}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapState, actions)(UnitInfoForm);","import _ from \"lodash\";\r\n\r\nimport {\r\n    openModal\r\n} from \"features/modals/modalActions\";\r\n\r\nexport function showColorPicker(initialColor, onColorPickedAction) {\r\n    // Define props that we want to \"pass\" to the ColorPicker dialog,\r\n    // including the body of the action that should be dispatched when\r\n    // the dialog is actually used to select a color.\r\n    const colorPickerProps = {\r\n        color : initialColor,\r\n        onColorPicked : onColorPickedAction\r\n    };\r\n    return openModal(\"ColorPickerDialog\", colorPickerProps);\r\n}\r\n\r\nexport function colorSelected(color, actionToDispatch) {\r\n    return (dispatch) => {\r\n        if(actionToDispatch) {\r\n            const newAction = _.cloneDeep(actionToDispatch);\r\n            newAction.payload.color = color;\r\n\r\n            dispatch(newAction);\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\n\r\nimport UnitOrganizationTree from \"../UnitOrganizationTree/UnitOrganizationTree\";\r\nimport UnitInfoForm from \"./UnitInfoForm\";\r\n\r\n\r\nclass UnitInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Segment>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        <Header as=\"h3\">Unit Table of Organization</Header>\r\n                        <Segment>\r\n                            <UnitOrganizationTree />\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <Header as=\"h3\">Edit Unit</Header>\r\n                        <Segment>\r\n                            <UnitInfoForm />\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UnitInfo;","import React from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nconst PilotsListHeader = () => (\r\n    <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell width={5}>\r\n                Name\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={3}>\r\n                Rank\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>\r\n                Age\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>\r\n                Skills\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={3}>\r\n                Mech\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={1} />\r\n\r\n        </Table.Row>\r\n    </Table.Header>\r\n);\r\n\r\nexport default PilotsListHeader;","import {\r\n    ENTITY_UPDATE,\r\n    ENTITY_DELETE,\r\n    ENTITY_CREATE,\r\n} from \"./entityConstants\";\r\n\r\nexport function updateEntity(itemType, itemID, newItemAttributes) {\r\n    return {\r\n        type : ENTITY_UPDATE,\r\n        payload : {\r\n            itemType,\r\n            itemID,\r\n            newItemAttributes,\r\n        },\r\n    };\r\n}\r\n\r\nexport function deleteEntity(itemType, itemID) {\r\n    return {\r\n        type : ENTITY_DELETE,\r\n        payload : {itemType, itemID}\r\n    };\r\n}\r\n\r\nexport function createEntity(itemType, newItemAttributes) {\r\n    return {\r\n        type : ENTITY_CREATE,\r\n        payload : {\r\n            itemType,\r\n            newItemAttributes,\r\n        },\r\n    };\r\n}","import {CONTEXT_MENU_HIDE, CONTEXT_MENU_SHOW} from \"./contextMenuConstants\";\r\n\r\n\r\nexport function showContextMenu(x, y, type, menuArgs) {\r\n    return {\r\n        type : CONTEXT_MENU_SHOW,\r\n        payload : {\r\n            location : {\r\n                x,\r\n                y\r\n            },\r\n            type,\r\n            menuArgs\r\n        }\r\n    }\r\n}\r\n\r\nexport function hideContextMenu() {\r\n    return {\r\n        type : CONTEXT_MENU_HIDE\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Icon,\r\n} from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\nimport {deleteEntity} from \"features/entities/entityActions\";\r\nimport {showContextMenu} from \"features/contextMenus/contextMenuActions\";\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Pilot} = session;\r\n\r\n    let pilot;\r\n\r\n    if(Pilot.hasId(ownProps.pilotID)) {\r\n        const pilotModel = Pilot.withId(ownProps.pilotID);\r\n\r\n        // Access the underlying plain JS object using the \"ref\" field,\r\n        // and make a shallow copy of it\r\n        pilot = {\r\n            ...pilotModel.ref\r\n        };\r\n\r\n        // We want to look up pilotModel.mech.mechType.  Just in case the\r\n        // relational fields are null, we'll do a couple safety checks as we go.\r\n\r\n        // Look up the associated Mech instance using the foreign-key\r\n        // field that we defined in the Pilot Model class\r\n        const {mech} = pilotModel;\r\n\r\n        // If there actually is an associated mech, include the\r\n        // mech type's ID as a field in the data passed to the component\r\n        if(mech && mech.type) {\r\n            pilot.mechType = mech.type.id;\r\n        }\r\n    }\r\n\r\n    return {pilot};\r\n}\r\n\r\nconst actions = {\r\n    deleteEntity,\r\n    showContextMenu,\r\n};\r\n\r\n\r\nconst PilotsListRow = ({pilot={}, onPilotClicked=_.noop, selected, deleteEntity, showContextMenu}) => {\r\n    const {\r\n        id = null,\r\n        name = \"\",\r\n        rank = \"\",\r\n        age = \"\",\r\n        gunnery = \"\",\r\n        piloting = \"\",\r\n        mechType = \"\",\r\n    } = pilot;\r\n\r\n    const onDeleteClicked = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        deleteEntity(\"Pilot\", id);\r\n    }\r\n\r\n    const onRowClicked = () => onPilotClicked(id);\r\n\r\n    const onRowRightClicked = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const {pageX, pageY} = e;\r\n        showContextMenu(pageX, pageY, \"PilotsListItemMenu\", {text: pilot.name, pilotId : id});\r\n    }\r\n\r\n\r\n    return (\r\n        <Table.Row onClick={onRowClicked} onContextMenu={onRowRightClicked}  active={selected}>\r\n            <Table.Cell>\r\n                {name}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {rank}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {age}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {gunnery}/{piloting}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {mechType}\r\n            </Table.Cell>\r\n\r\n            <Table.Cell>\r\n                <Button\r\n                    compact\r\n                    basic\r\n                    circular\r\n                    size=\"tiny\"\r\n                    color=\"red\"\r\n                    icon={<Icon  name=\"delete\" />}\r\n                    onClick={onDeleteClicked}\r\n                >\r\n                </Button>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    );\r\n}\r\n\r\nexport default connect(mapState, actions)(PilotsListRow);\r\n","import {\r\n    EDIT_ITEM_EXISTING,\r\n    EDIT_ITEM_NEW,\r\n    EDIT_ITEM_UPDATE,\r\n    EDIT_ITEM_APPLY,\r\n    EDIT_ITEM_STOP,\r\n    EDIT_ITEM_RESET,\r\n} from \"./editingConstants\";\r\n\r\n\r\nexport function editExistingItem(itemType, itemID) {\r\n    return {\r\n        type : EDIT_ITEM_EXISTING,\r\n        payload : {\r\n            itemType,\r\n            itemID\r\n        },\r\n    };\r\n}\r\n\r\nexport function editNewItem(itemType, itemID, newItemAttributes) {\r\n    return {\r\n        type : EDIT_ITEM_NEW,\r\n        payload : {\r\n            itemType,\r\n            itemID,\r\n            newItemAttributes,\r\n        }\r\n    };\r\n}\r\n\r\nexport function editItemAttributes(itemType, itemID, newItemAttributes) {\r\n    return {\r\n        type : EDIT_ITEM_UPDATE,\r\n        payload : {\r\n            itemType,\r\n            itemID,\r\n            newItemAttributes,\r\n        },\r\n    };\r\n}\r\n\r\nexport function applyItemEdits(itemType, itemID) {\r\n    return {\r\n        type : EDIT_ITEM_APPLY,\r\n        payload : {\r\n            itemType,\r\n            itemID\r\n        },\r\n    };\r\n}\r\n\r\nexport function stopEditingItem(itemType, itemID) {\r\n    return {\r\n        type : EDIT_ITEM_STOP,\r\n        payload : {\r\n            itemType,\r\n            itemID\r\n        },\r\n    };\r\n}\r\n\r\nexport function resetEditedItem(itemType, itemID) {\r\n    return {\r\n        type : EDIT_ITEM_RESET,\r\n        payload : {\r\n            itemType,\r\n            itemID,\r\n        },\r\n    };\r\n}","import {createSelector} from \"reselect\";\r\n\r\nexport const selectPilots = state => state.pilots;\r\n\r\nexport const selectCurrentPilot = createSelector(\r\n    selectPilots,\r\n    pilots => pilots.currentPilot,\r\n);\r\n\r\nexport const selectIsEditingPilot = createSelector(\r\n    selectPilots,\r\n    pilots => pilots.isEditing\r\n);","import cuid from \"cuid\";\r\n\r\nimport {\r\n    editExistingItem,\r\n    editNewItem,\r\n    applyItemEdits,\r\n    stopEditingItem\r\n} from \"features/editing/editingActions\";\r\n\r\nimport {\r\n    PILOT_SELECT,\r\n    PILOT_EDIT_START,\r\n    PILOT_EDIT_STOP,\r\n} from \"./pilotsConstants\";\r\n\r\nimport {selectCurrentPilot, selectIsEditingPilot} from \"./pilotsSelectors\";\r\nimport {getEntitiesSession, getUnsharedEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nexport function selectPilot(pilotID) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const isEditing = selectIsEditingPilot(state);\r\n\r\n        if(isEditing) {\r\n            dispatch(cancelEditingPilot())\r\n        }\r\n\r\n        dispatch({\r\n            type : PILOT_SELECT,\r\n            payload : {currentPilot : pilotID},\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport function startEditingPilot() {\r\n    return (dispatch, getState) => {\r\n        const currentPilot = selectCurrentPilot(getState());\r\n\r\n        dispatch(editExistingItem(\"Pilot\", currentPilot));\r\n        dispatch({type : PILOT_EDIT_START});\r\n    }\r\n}\r\n\r\n\r\nexport function handleStopEditingPilot(applyEdits = true) {\r\n    return (dispatch, getState) => {\r\n        const currentPilot = selectCurrentPilot(getState());\r\n\r\n        // Determine if it's a new pilot based on the \"current\" slice contents\r\n        const session = getEntitiesSession(getState());\r\n        const {Pilot} = session;\r\n\r\n        const isNewPilot = !Pilot.hasId(currentPilot);\r\n\r\n        dispatch({type : PILOT_EDIT_STOP});\r\n\r\n        if(applyEdits) {\r\n            dispatch(applyItemEdits(\"Pilot\", currentPilot));\r\n        }\r\n\r\n        dispatch(stopEditingItem(\"Pilot\", currentPilot));\r\n\r\n        if(isNewPilot) {\r\n            dispatch({type : PILOT_SELECT, payload : {currentPilot : null}});\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function stopEditingPilot() {\r\n    return (dispatch, getState) => {\r\n        dispatch(handleStopEditingPilot(true));\r\n    }\r\n}\r\n\r\nexport function cancelEditingPilot() {\r\n    return (dispatch, getState) => {\r\n        dispatch(handleStopEditingPilot(false));\r\n    }\r\n}\r\n\r\nexport function addNewPilot() {\r\n    return (dispatch, getState) => {\r\n        const session = getUnsharedEntitiesSession(getState());\r\n        const {Pilot} = session;\r\n\r\n        const id = cuid();\r\n\r\n        const newPilot = Pilot.generate({id});\r\n\r\n        const pilotContents = newPilot.toJSON();\r\n\r\n        dispatch(editNewItem(\"Pilot\", id, pilotContents));\r\n        dispatch(selectPilot(id));\r\n        dispatch({type : PILOT_EDIT_START});\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\nimport PilotsListHeader from \"./PilotsListHeader\";\r\nimport PilotsListRow from \"./PilotsListRow\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport {selectPilot} from \"../pilotsActions\";\r\nimport {selectCurrentPilot} from \"../pilotsSelectors\";\r\n\r\n\r\nconst mapState = (state) => {\r\n    // Create a Redux-ORM Session from our \"entities\" slice, which\r\n    // contains the \"tables\" for each model type\r\n    const session = getEntitiesSession(state);\r\n\r\n    // Retrieve the model class that we need.  Each Session\r\n    // specifically \"binds\" model classes to itself, so that\r\n    // updates to model instances are applied to that session.\r\n    // These \"bound classes\" are available as fields in the sesssion.\r\n    const {Pilot} = session;\r\n\r\n    // Query the session for all Pilot instances.\r\n    // The QuerySet that is returned from all() can be used to\r\n    // retrieve instances of the Pilot class, or retrieve the\r\n    // plain JS objects that are actually in the store.\r\n\r\n    // The withModels modifier will let us map over Model instances\r\n    // for each entry, rather than the plain JS objects.\r\n\r\n    // Extract a list of IDs for each Pilot entry\r\n    const pilots = Pilot.all().toModelArray().map(pilotModel => pilotModel.getId());\r\n\r\n    const currentPilot = selectCurrentPilot(state);\r\n\r\n    // Return the list of pilot IDs and the current pilot ID as props\r\n    return {pilots, currentPilot};\r\n}\r\n\r\n// Make an object full of action creators that can be passed to connect\r\n// and bound up, instead of writing a separate mapDispatch function\r\nconst actions = {\r\n    selectPilot,\r\n};\r\n\r\n\r\nexport class PilotsList extends Component {\r\n    render() {\r\n        const {pilots = [], selectPilot, currentPilot} = this.props;\r\n\r\n        const pilotRows = pilots.map(pilotID => (\r\n            <PilotsListRow\r\n                pilotID={pilotID}\r\n                key={pilotID}\r\n                onPilotClicked={selectPilot}\r\n                selected={pilotID === currentPilot}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <Table celled>\r\n                <PilotsListHeader />\r\n                <Table.Body>\r\n                    {pilotRows}\r\n                </Table.Body>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapState, actions)(PilotsList);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Dropdown, Grid, Button} from \"semantic-ui-react\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\nimport {getEditingEntitiesSession} from \"features/editing/editingSelectors\";\r\n\r\nimport FormEditWrapper from \"common/components/FormEditWrapper\";\r\n\r\nimport {selectCurrentPilot, selectIsEditingPilot} from \"../pilotsSelectors\";\r\nimport {PILOT_RANKS} from \"../pilotsConstants\";\r\n\r\nimport {\r\n    startEditingPilot,\r\n    stopEditingPilot,\r\n    cancelEditingPilot,\r\n} from \"../pilotsActions\";\r\n\r\nimport {\r\n    resetEditedItem,\r\n} from \"features/editing/editingActions\";\r\n\r\nimport {editItemAttributes} from \"features/editing/editingActions\";\r\n\r\nimport {getValueFromEvent} from \"common/utils/clientUtils\";\r\n\r\n\r\nconst RANKS = PILOT_RANKS.map(rank => ({value : rank, text : rank}));\r\n\r\nconst SKILL_VALUES = [\r\n    {value : 0, text : 0},\r\n    {value : 1, text : 1},\r\n    {value : 2, text : 2},\r\n    {value : 3, text : 3},\r\n    {value : 4, text : 4},\r\n    {value : 5, text : 5},\r\n    {value : 6, text : 6},\r\n    {value : 7, text : 7},\r\n    {value : 8, text : 8},\r\n]\r\n\r\nconst MECHS = [\r\n    {value : \"WHM-6R\", text : \"Warhammer WHM-6R\"}\r\n];\r\n\r\nconst mapState = (state) => {\r\n    let pilot;\r\n    \r\n    const currentPilot = selectCurrentPilot(state);\r\n\r\n    const pilotIsSelected = Boolean(currentPilot);\r\n    const isEditingPilot = selectIsEditingPilot(state);\r\n\r\n    if(pilotIsSelected) {\r\n        const session = isEditingPilot ?\r\n            getEditingEntitiesSession(state) :\r\n            getEntitiesSession(state);\r\n\r\n        const {Pilot} = session;\r\n\r\n        if(Pilot.hasId(currentPilot)) {\r\n            pilot = Pilot.withId(currentPilot).ref;\r\n        }\r\n    }\r\n    return {pilot, pilotIsSelected, isEditingPilot}\r\n}\r\n\r\n\r\nconst actions = {\r\n    startEditingPilot,\r\n    stopEditingPilot,\r\n    editItemAttributes,\r\n    resetEditedItem,\r\n    cancelEditingPilot,\r\n}\r\n\r\n\r\nexport class PilotDetails  extends Component {\r\n    onInputChanged = (e) => {\r\n        const newValues = getValueFromEvent(e);\r\n        const {id} = this.props.pilot;\r\n\r\n        this.props.editItemAttributes(\"Pilot\", id, newValues);\r\n    }\r\n\r\n    onDropdownChanged = (e, result) => {\r\n        const {name, value} = result;\r\n        const newValues = { [name] : value};\r\n        const {id} = this.props.pilot;\r\n\r\n        this.props.editItemAttributes(\"Pilot\", id, newValues);\r\n    }\r\n\r\n    onStartEditingClicked = () => {\r\n        this.props.startEditingPilot();\r\n    }\r\n\r\n    onStopEditingClicked = () => {\r\n        this.props.stopEditingPilot();\r\n    }\r\n\r\n    onResetClicked = () => {\r\n        const {id} = this.props.pilot;\r\n        this.props.resetEditedItem(\"Pilot\", id);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {pilot={}, pilotIsSelected = false, isEditingPilot = false } = this.props;\r\n\r\n        const {\r\n            name = \"\",\r\n            rank = \"\",\r\n            age = \"\",\r\n            gunnery = \"\",\r\n            piloting = \"\",\r\n            mechType = \"\",\r\n        } = pilot;\r\n\r\n        const canStartEditing = pilotIsSelected && !isEditingPilot;\r\n        const canStopEditing = pilotIsSelected && isEditingPilot;\r\n\r\n        const buttonWidth = 140;\r\n\r\n        return (\r\n            <Form size=\"large\">\r\n                <FormEditWrapper\r\n                    singleValue={true}\r\n                    value={ {name} }\r\n                    onChange={this.onInputChanged}\r\n                    passIsEditing={false}\r\n                >\r\n                    <Form.Field\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        width={16}\r\n                        placeholder=\"Name\"\r\n                        disabled={!canStopEditing}\r\n                        control=\"input\"\r\n                    />\r\n                </FormEditWrapper>\r\n                <Form.Group>\r\n                    <Form.Field\r\n                        name=\"rank\"\r\n                        label=\"Rank\"\r\n                        width={10}\r\n                        control={Dropdown}\r\n                        fluid\r\n                        selection\r\n                        options={RANKS}\r\n                        value={rank}\r\n                        onChange={this.onDropdownChanged}\r\n                        disabled={!canStopEditing}\r\n                    />\r\n                    <FormEditWrapper\r\n                        singleValue={true}\r\n                        value={ {age} }\r\n                        onChange={this.onInputChanged}\r\n                        passIsEditing={false}\r\n                    >\r\n                        <Form.Field\r\n                            name=\"age\"\r\n                            width={6}\r\n                            label=\"Age\"\r\n                            placeholder=\"Age\"\r\n                            control=\"input\"\r\n                            disabled={!canStopEditing}\r\n                        />\r\n                    </FormEditWrapper>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                    <Form.Field\r\n                        name=\"gunnery\"\r\n                        label=\"Gunnery\"\r\n                        control={Dropdown}\r\n                        fluid\r\n                        selection\r\n                        options={SKILL_VALUES}\r\n                        value={gunnery}\r\n                        onChange={this.onDropdownChanged}\r\n                        disabled={!canStopEditing}\r\n                    />\r\n                    <Form.Field\r\n                        name=\"piloting\"\r\n                        label=\"Piloting\"\r\n                        control={Dropdown}\r\n                        fluid\r\n                        selection\r\n                        options={SKILL_VALUES}\r\n                        value={piloting}\r\n                        onChange={this.onDropdownChanged}\r\n                        disabled={!canStopEditing}\r\n                    />\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Field\r\n                    name=\"mech\"\r\n                    label=\"Mech\"\r\n                    width={16}\r\n                    control={Dropdown}\r\n                    fluid\r\n                    selection\r\n                    options={MECHS}\r\n                    value={mechType}\r\n                    disabled={true}\r\n                />\r\n                <Grid.Row width={16}>\r\n                    <Button\r\n                        primary\r\n                        disabled={!canStartEditing}\r\n                        type=\"button\"\r\n                        onClick={this.onStartEditingClicked}\r\n                        style={{width : buttonWidth, marginRight : 10}}\r\n                    >\r\n                        Start Editing\r\n                    </Button>\r\n                    <Button\r\n                        secondary\r\n                        disabled={!canStopEditing}\r\n                        type=\"button\"\r\n                        style={{width : buttonWidth}}\r\n                        onClick={this.onStopEditingClicked}\r\n                    >\r\n                        Save Edits\r\n                    </Button>\r\n                </Grid.Row>\r\n                <Grid.Row width={16}>\r\n                    <Button\r\n                        disabled={!canStopEditing}\r\n                        type=\"button\"\r\n                        onClick={this.onResetClicked}\r\n                        style={{width : buttonWidth, marginRight : 10}}\r\n                    >\r\n                        Reset Values\r\n                    </Button>\r\n                    <Button\r\n                        negative\r\n                        disabled={!canStopEditing}\r\n                        type=\"button\"\r\n                        style={{width : buttonWidth}}\r\n                        onClick={this.props.cancelEditingPilot}\r\n                    >\r\n                        Cancel Edits\r\n                    </Button>\r\n                </Grid.Row>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapState, actions)(PilotDetails);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from \"semantic-ui-react\";\r\n\r\nimport {selectIsEditingPilot} from \"../pilotsSelectors\";\r\nimport {addNewPilot} from \"../pilotsActions\";\r\n\r\nconst mapState = (state) => {\r\n    const isEditingPilot = selectIsEditingPilot(state);\r\n\r\n    return {isEditingPilot};\r\n}\r\n\r\nconst buttonWidth = 140;\r\n\r\nconst actions = {addNewPilot};\r\n\r\nconst PilotCommands = (props) => (\r\n    <Button\r\n        primary\r\n        disabled={props.isEditingPilot}\r\n        type=\"button\"\r\n        onClick={props.addNewPilot}\r\n        style={{width : buttonWidth, marginRight : 10}}\r\n    >\r\n        Add New Pilot\r\n    </Button>\r\n);\r\n\r\n\r\n\r\nexport default connect(mapState, actions)(PilotCommands);","import React, {Component} from \"react\";\r\n\r\nimport {\r\n    Grid,\r\n    Segment,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\n\r\nimport PilotsList from \"../PilotsList\";\r\nimport PilotDetails from \"../PilotDetails\";\r\nimport PilotCommands from \"../PilotDetails/PilotCommands\";\r\n\r\n\r\nexport default class Pilots extends Component {\r\n    render() {\r\n        return (\r\n            <Segment>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        <Header as=\"h3\">Pilot List</Header>\r\n                        <PilotsList />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <Header as=\"h3\">Pilot Details</Header>\r\n                        <Segment >\r\n                            <PilotDetails />\r\n                        </Segment>\r\n                        <Segment>\r\n                            <PilotCommands />\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\n\r\nconst MechsListHeader = () => (\r\n    <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell width={1}>\r\n                IDs\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={5}>\r\n                Name\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={3}>\r\n                Model\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={3}>\r\n                Weight (tons)\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>\r\n                Class\r\n            </Table.HeaderCell>\r\n\r\n        </Table.Row>\r\n    </Table.Header>\r\n);\r\n\r\nexport default MechsListHeader;","import {createSelector} from \"reselect\";\r\n\r\nconst WEIGHT_CLASSES = [\r\n    {name : \"Light\", weights : [20, 25, 30, 35]},\r\n    {name : \"Medium\", weights : [40, 45, 50, 55]},\r\n    {name : \"Heavy\", weights : [60, 65, 70, 75]},\r\n    {name : \"Assault\", weights : [80, 85, 90, 95, 100]},\r\n];\r\n\r\nexport function getWeightClass(weight) {\r\n    const weightClass = WEIGHT_CLASSES.find(wc => wc.weights.includes(weight)) || {name : \"Unknown\"};\r\n    return weightClass.name;\r\n}\r\n\r\n\r\nconst selectMechs = state => state.mechs;\r\n\r\nexport const selectCurrentMech = createSelector(\r\n    selectMechs,\r\n    mechs => mechs.currentMech,\r\n);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\nimport {getWeightClass} from \"../mechSelectors\";\r\n\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nconst mapState = (state, ownProps) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Mech} = session;\r\n\r\n    let mech;\r\n\r\n    if(Mech.hasId(ownProps.mechID)) {\r\n        const mechModel = Mech.withId(ownProps.mechID);\r\n\r\n        mech = {\r\n            // Copy the data from the plain JS object\r\n            ...mechModel.ref,\r\n            // Provide a default empty object for the relation\r\n            mechType : {},\r\n        };\r\n\r\n        if(mechModel.type) {\r\n            // Replace the default object with a copy of the relation's data\r\n            mech.mechType = {...mechModel.type.ref};\r\n        }\r\n    }\r\n\r\n    return {mech};\r\n}\r\n\r\n\r\nconst MechsListRow = ({mech = {}, onMechClicked, selected}) => {\r\n    const {\r\n        id = null,\r\n        type = \"\",\r\n        mechType = {},\r\n    } = mech;\r\n\r\n    const {\r\n        name = \"\",\r\n        weight = \"\",\r\n    } = mechType;\r\n\r\n    const weightClass = getWeightClass(weight);\r\n\r\n    return (\r\n        <Table.Row onClick={() => onMechClicked(id)} active={selected}>\r\n            <Table.Cell>\r\n                {id}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {name}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {type}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {weight}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {weightClass}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(mapState)(MechsListRow);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table} from \"semantic-ui-react\";\r\n\r\nimport MechsListHeader from \"./MechsListHeader\";\r\nimport MechsListRow from \"./MechsListRow\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport {selectMech} from \"../mechsActions\";\r\nimport {selectCurrentMech} from \"../mechSelectors\";\r\n\r\n\r\nconst mapState = (state) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Mech} = session;\r\n\r\n    const mechs = Mech.all().toModelArray().map(mechModel => mechModel.getId());\r\n\r\n    const currentMech = selectCurrentMech(state);\r\n\r\n    return {mechs, currentMech}\r\n}\r\n\r\nconst actions = {\r\n    selectMech,\r\n};\r\n\r\n\r\n\r\nexport class MechsList extends Component {\r\n\r\n    render() {\r\n        const {mechs = [], currentMech, selectMech} = this.props;\r\n\r\n        const mechRows = mechs.map(mechID => (\r\n            <MechsListRow\r\n                mechID={mechID}\r\n                key={mechID}\r\n                onMechClicked={selectMech}\r\n                selected={mechID === currentMech}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <Table celled>\r\n                <MechsListHeader />\r\n\r\n                <Table.Body>\r\n                    {mechRows}\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapState, actions)(MechsList);\r\n","import {MECH_SELECT} from \"./mechsConstants\";\r\n\r\nexport function selectMech(mechID) {\r\n    return {\r\n        type : MECH_SELECT,\r\n        payload : {currentMech : mechID},\r\n    };\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Form} from \"semantic-ui-react\";\r\n\r\nimport {getEntitiesSession} from \"features/entities/entitySelectors\";\r\n\r\nimport {getWeightClass, selectCurrentMech} from \"../mechSelectors\";\r\n\r\n\r\nconst mapState = (state) => {\r\n    let mech;\r\n\r\n    const currentMech = selectCurrentMech(state);\r\n\r\n    const session = getEntitiesSession(state);\r\n    const {Mech} = session;\r\n\r\n    if(Mech.hasId(currentMech)) {\r\n        const mechModel = Mech.withId(currentMech);\r\n\r\n        mech = {\r\n            // Copy the data from the plain JS object\r\n            ...mechModel.ref,\r\n            // Provide a default empty object for the relation\r\n            mechType : {},\r\n        };\r\n\r\n        if(mechModel.type) {\r\n            // Replace the default object with a copy of the relation's data\r\n            mech.mechType = {...mechModel.type.ref};\r\n        }\r\n    }\r\n\r\n    return {mech}\r\n}\r\n\r\nconst MechDetails = ({mech={}}) => {\r\n    const {\r\n        id = \"\",\r\n        type = \"\",\r\n        mechType = {},\r\n    } = mech;\r\n\r\n    const {\r\n        name = \"\",\r\n        weight = \"\",\r\n    } = mechType;\r\n\r\n\r\n    const weightClass = getWeightClass(weight);\r\n\r\n    return (\r\n        <Form size=\"large\">\r\n            <Form.Field name=\"id\" width={6} >\r\n                <label>ID</label>\r\n                <input\r\n                    placeholder=\"ID\"\r\n                    value={id}\r\n                    disabled={true}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field name=\"name\" width={16} >\r\n                <label>Name</label>\r\n                <input\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    disabled={true}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field name=\"model\" width={6} >\r\n                <label>Model</label>\r\n                <input\r\n                    placeholder=\"Model\"\r\n                    value={type}\r\n                    disabled={true}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field name=\"weight\" width={6} >\r\n                <label>Weight</label>\r\n                <input\r\n                    value={weight}\r\n                    disabled={true}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field name=\"class\" width={6} >\r\n                <label>Class</label>\r\n                <input\r\n                    value={weightClass}\r\n                    disabled={true}\r\n                />\r\n            </Form.Field>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default connect(mapState)(MechDetails);\r\n","import React, {Component} from \"react\";\r\n\r\nimport {\r\n    Grid,\r\n    Segment,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\n\r\nimport MechsList from \"../MechsList\";\r\nimport MechDetails from \"../MechDetails\";\r\n\r\n\r\nexport default class Mechs extends Component {\r\n    render() {\r\n        return (\r\n            <Segment>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        <Header as=\"h3\">Mechs List</Header>\r\n                        <MechsList />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <Header as=\"h3\">Mech Details</Header>\r\n                        <Segment >\r\n                            <MechDetails />\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n","const sampleData = {\r\n    unit : {\r\n        id : 1,\r\n        name : \"Black Widow Company\",\r\n        affiliation : \"wd\",\r\n        color : \"black\",\r\n        lances : [\r\n            {\r\n                id : 1,\r\n                name : \"Command Lance\",\r\n                pilots : [\r\n                    1, 2, 3, 4\r\n                ]\r\n            },\r\n            {\r\n                id : 2,\r\n                name : \"Fire Lance\",\r\n                pilots : [\r\n                    5, 6, 7, 8\r\n                ]\r\n            },\r\n            {\r\n                id : 3,\r\n                name : \"Recon Lance\",\r\n                pilots : [\r\n                    9, 10, 11, 12\r\n                ]\r\n            }\r\n        ],\r\n        pilots : [\r\n            {\r\n                id : 1,\r\n                name : \"Natasha Kerensky\",\r\n                rank : \"Captain\",\r\n                gunnery : 2,\r\n                piloting : 2,\r\n                age : 52,\r\n                mech : 1,\r\n            },\r\n            {\r\n                id : 2,\r\n                name : \"Colin Maclaren\",\r\n                rank : \"Sergeant\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 43,\r\n                mech : 2,\r\n            },\r\n            {\r\n                id : 3,\r\n                name : \"Lynn Sheridan\",\r\n                rank : \"Corporal\",\r\n                gunnery : 4,\r\n                piloting : 5,\r\n                age : 27,\r\n                mech : 3,\r\n            },\r\n            {\r\n                id : 4,\r\n                name : \"John Hayes\",\r\n                rank : \"Sergeant\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 34,\r\n                mech : 4,\r\n            },\r\n            {\r\n                id : 5,\r\n                name : \"Takiro Ikeda\",\r\n                rank : \"Lieutenant\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 41,\r\n                mech : 5,\r\n            },\r\n            {\r\n                id : 6,\r\n                name : \"Miklos Delius\",\r\n                rank : \"Corporal\",\r\n                gunnery : 4,\r\n                piloting : 4,\r\n                age : 31,\r\n                mech : 6,\r\n            },\r\n            {\r\n                id : 7,\r\n                name : \"Nikolai Koniev\",\r\n                rank : \"Private\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 39,\r\n                mech : 7,\r\n            },\r\n            {\r\n                id : 8,\r\n                name : \"Alex Ward\",\r\n                rank : \"Corporal\",\r\n                gunnery : 4,\r\n                piloting : 5,\r\n                age : 36,\r\n                mech : 8,\r\n            },\r\n            {\r\n                id : 9,\r\n                name : \"John 'Gentlemen Johnny' Clavell\",\r\n                rank : \"Lieutenant\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 40,\r\n                mech : 9,\r\n            },\r\n            {\r\n                id : 10,\r\n                name : \"Piet Nichols\",\r\n                rank : \"Corporal\",\r\n                gunnery : 4,\r\n                piloting : 5,\r\n                age : 37,\r\n                mech : 10,\r\n            },\r\n            {\r\n                id : 11,\r\n                name : \"Simon Fraser\",\r\n                rank : \"Sergeant\",\r\n                gunnery : 3,\r\n                piloting : 4,\r\n                age : 32,\r\n                mech : 11,\r\n            },\r\n            {\r\n                id : 12,\r\n                name : \"Mohammar Jahan\",\r\n                rank : \"Corporal\",\r\n                gunnery : 3,\r\n                piloting : 5,\r\n                age : 29,\r\n                mech : 12,\r\n            },\r\n        ],\r\n        mechs : [\r\n            {\r\n                id : 1,\r\n                type : \"WHM-6R\",\r\n                pilot : 1,\r\n            },\r\n            {\r\n                id : 2,\r\n                type : \"MAD-3R\",\r\n                pilot : 2,\r\n            },\r\n            {\r\n                id : 3,\r\n                type : \"CRD-3R\",\r\n                pilot : 3,\r\n            },\r\n            {\r\n                id : 4,\r\n                type : \"GRF-1N\",\r\n                pilot : 4,\r\n            },\r\n            {\r\n                id : 5,\r\n                type : \"ARC-2R\",\r\n                pilot : 5,\r\n            },\r\n            {\r\n                id : 6,\r\n                type : \"ARC-2R\",\r\n                pilot : 6,\r\n            },\r\n            {\r\n                id : 7,\r\n                type : \"WSP-1A\",\r\n                pilot : 7,\r\n            },\r\n            {\r\n                id : 8,\r\n                type : \"STG-3R\",\r\n                pilot : 8,\r\n            },\r\n            {\r\n                id : 9,\r\n                type : \"RFL-3N\",\r\n                pilot : 9,\r\n            },\r\n            {\r\n                id : 10,\r\n                type : \"PXH-1K\",\r\n                pilot : 10,\r\n            },\r\n            {\r\n                id : 11,\r\n                type : \"STG-3R\",\r\n                pilot : 11,\r\n            },\r\n            {\r\n                id : 12,\r\n                type : \"STG-3R\",\r\n                pilot : 12,\r\n            }\r\n        ]\r\n    },\r\n\r\n    designs : [\r\n        {\r\n            id : \"STG-3R\",\r\n            name : \"Stinger\",\r\n            weight : 20,\r\n        },\r\n        {\r\n            id : \"WSP-1A\",\r\n            name : \"Wasp\",\r\n            weight : 20,\r\n        },\r\n        {\r\n            id : \"PXH-1K\",\r\n            name : \"Phoenix Hawk\",\r\n            weight : 45,\r\n        },\r\n        {\r\n            id : \"GRF-1N\",\r\n            name : \"Griffin\",\r\n            weight : 55,\r\n        },\r\n        {\r\n            id : \"RFL-3N\",\r\n            name : \"Rifleman\",\r\n            weight : 60,\r\n        },\r\n        {\r\n            id : \"CRD-3R\",\r\n            name : \"Crusader\",\r\n            weight : 65,\r\n        },\r\n        {\r\n            id : \"ARC-2R\",\r\n            name : \"Archer\",\r\n            weight : 70,\r\n        },\r\n        {\r\n            id : \"WHM-6R\",\r\n            name : \"Warhammer\",\r\n            weight : 70,\r\n        },\r\n        {\r\n            id : \"MAD-3R\",\r\n            name : \"Marauder\",\r\n            weight : 75,\r\n        },\r\n    ],\r\n\r\n    factions : [\r\n        {id : \"cc\", name : \"Capellan Confederation\"},\r\n        {id : \"dc\", name : \"Draconis Combine\"},\r\n        {id : \"elh\", name : \"Eridani Light Horse\"},\r\n        {id : \"fs\", name : \"Federated Suns\"},\r\n        {id : \"fwl\", name : \"Free Worlds League\"},\r\n        {id : \"hr\", name : \"Hansen's Roughriders\"},\r\n        {id : \"lc\", name : \"Lyran Commonwealth\"},\r\n        {id : \"wd\", name : \"Wolf's Dragoons\"},\r\n    ]\r\n};\r\n\r\n\r\n\r\nexport default sampleData;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Segment,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {loadUnitData} from \"../toolActions\";\r\nimport {showContextMenu} from \"features/contextMenus/contextMenuActions\";\r\n\r\n\r\n\r\nconst actions = {loadUnitData, showContextMenu};\r\n\r\nclass Tools extends Component {\r\n\r\n    onShowContextMenuClicked = () => {\r\n        this.props.showContextMenu(600, 200, \"TestContextMenu\", {text : \"Blah\"});\r\n    }\r\n\r\n    render() {\r\n        const {loadUnitData} = this.props;\r\n        \r\n        return (\r\n            <Segment attached=\"bottom\">\r\n                <Button onClick={loadUnitData}>Reload Unit Data</Button>\r\n                <Button primary onClick={this.onShowContextMenuClicked}>Show Test Context Menu</Button>\r\n\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(Tools);\r\n","import {fetchData} from \"data/mockAPI\";\r\n\r\nimport {DATA_LOADED} from \"./toolConstants\";\r\n\r\nexport function loadUnitData() {\r\n    return (dispatch, getState) => {\r\n        fetchData()\r\n            .then(data => {\r\n                dispatch({\r\n                    type : DATA_LOADED,\r\n                    payload : data\r\n                })\r\n            });\r\n    }\r\n}","import sampleData from \"./sampleData\";\r\n\r\nexport function fetchData() {\r\n    return Promise.resolve(sampleData);\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Modal,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {openModal, closeModal} from \"features/modals/modalActions\";\r\n\r\nconst actions = {openModal, closeModal};\r\n\r\nexport class TestModal extends Component {\r\n\r\n    onNextModalClick = () => {\r\n        const {counter} = this.props;\r\n\r\n        this.props.openModal(\"TestModal\", {counter : counter + 1});\r\n    }\r\n\r\n    render() {\r\n        const {counter, closeModal} = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                closeIcon=\"close\"\r\n                open={true}\r\n                onClose={closeModal}\r\n            >\r\n                <Modal.Header>Modal #{counter}</Modal.Header>\r\n                <Modal.Content image>\r\n                    <Modal.Description>\r\n                        <h4>\r\n                            Value from props:\r\n                        </h4>\r\n                        <div>\r\n                            counter = {counter}\r\n                        </div>\r\n                        <div>\r\n                            <Button onClick={this.onNextModalClick}>Add Another Modal</Button>\r\n                        </div>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, actions)(TestModal);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Modal,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {SketchPicker} from \"react-color\";\r\n\r\nimport {closeModal} from \"features/modals/modalActions\";\r\nimport {colorSelected} from \"./colorPickerActions\";\r\n\r\nconst actions = {closeModal, colorSelected};\r\n\r\nexport class ColorPickerDialog extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            color : props.color\r\n        }\r\n    }\r\n\r\n    onSelectClicked = () => {\r\n        this.props.colorSelected(this.state.color, this.props.onColorPicked);\r\n\r\n        this.props.closeModal();\r\n    }\r\n\r\n    onSelectedColorChanged = (colorEvent) => {\r\n        this.setState({color : colorEvent.hex});\r\n    }\r\n\r\n    render() {\r\n        const {closeModal} = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                closeIcon=\"close\"\r\n                open={true}\r\n                onClose={closeModal}\r\n                size=\"small\"\r\n            >\r\n                <Modal.Header>Select Color</Modal.Header>\r\n                <Modal.Content>\r\n                    <SketchPicker\r\n                        color={this.state.color}\r\n                        onChangeComplete={this.onSelectedColorChanged}\r\n                    />\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button positive onClick={this.onSelectClicked}>Select</Button>\r\n                    <Button secondary onClick={closeModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nColorPickerDialog.defaultProps = {\r\n    color : \"red\"\r\n};\r\n\r\n\r\nexport default connect(null, actions)(ColorPickerDialog);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport TestModal from \"./TestModal\";\r\nimport ColorPickerDialog from \"common/components/ColorPicker/ColorPickerDialog\";\r\n\r\nconst modalComponentLookupTable = {\r\n    ColorPickerDialog,\r\n    TestModal,\r\n};\r\n\r\nconst mapState = (state) => ({currentModals : state.modals});\r\n\r\n\r\nexport class ModalManager extends Component {\r\n    render() {\r\n        const {currentModals} = this.props;\r\n\r\n\r\n        const renderedModals = currentModals.map( (modalDescription, index) => {\r\n            const {modalType, modalProps = {}} = modalDescription;\r\n            const ModalComponent = modalComponentLookupTable[modalType];\r\n\r\n            return <ModalComponent {...modalProps}  key={modalType + index}/>;\r\n\r\n        });\r\n\r\n\r\n        return <span>{renderedModals}</span>\r\n    }\r\n}\r\n\r\nexport default connect(mapState)(ModalManager);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AbsolutePosition = (props) => {\r\n    const {children, nodeRef} = props;\r\n    const style = {\r\n        position: 'absolute',\r\n        top: props.top,\r\n        bottom : props.bottom,\r\n        left: props.left,\r\n        right : props.right,\r\n        width: props.width,\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={style} className={props.className} ref={nodeRef}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nAbsolutePosition.propTypes = {\r\n    top: PropTypes.number,\r\n    bottom : PropTypes.number,\r\n    left: PropTypes.number,\r\n    width: PropTypes.number,\r\n    nodeRef : PropTypes.func,\r\n};\r\n\r\nexport default AbsolutePosition;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport AbsolutePosition from \"common/components/AbsolutePosition\";\r\n\r\nimport {hideContextMenu} from \"./contextMenuActions\";\r\n\r\nconst actions = {hideContextMenu};\r\n\r\nexport class ContextMenu extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClickOutside, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside, true);\r\n    }\r\n\r\n    handleClickOutside = (e) => {\r\n        if (!this.node || !this.node.contains(e.target) ) {\r\n            this.props.hideContextMenu();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {location} = this.props;\r\n\r\n        return (\r\n            <AbsolutePosition\r\n                left={location.x + 2}\r\n                top={location.y}\r\n                className=\"contextMenu\"\r\n                nodeRef={node => this.node = node}\r\n            >\r\n                {this.props.children}\r\n            </AbsolutePosition>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(ContextMenu);\r\n","import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nexport default class TestContextMenu extends Component {\r\n    render() {\r\n        return (\r\n            <Menu vertical>\r\n                <Menu.Item>\r\n                    <Menu.Header>Menu Header: {this.props.text} </Menu.Header>\r\n\r\n                    <Menu.Menu>\r\n                        <Menu.Item>First Menu Item</Menu.Item>\r\n                        <Menu.Item>Second Menu Item</Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport {selectPilot} from \"../pilotsActions\";\r\nimport {deleteEntity} from \"features/entities/entityActions\";\r\nimport {hideContextMenu} from \"features/contextMenus/contextMenuActions\";\r\n\r\nconst actions = {\r\n    selectPilot,\r\n    deleteEntity,\r\n    hideContextMenu,\r\n}\r\n\r\nexport class PilotsListItemMenu extends Component {\r\n    onSelectClicked = () => {\r\n        this.props.selectPilot(this.props.pilotId);\r\n        this.props.hideContextMenu();\r\n    }\r\n\r\n    onDeleteClicked = () => {\r\n        this.props.deleteEntity(\"Pilot\", this.props.pilotId);\r\n        this.props.hideContextMenu();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu vertical>\r\n                <Menu.Item>\r\n                    <Menu.Header>Pilot: {this.props.text} </Menu.Header>\r\n\r\n                    <Menu.Menu>\r\n                        <Menu.Item onClick={this.onSelectClicked}>Select Pilot</Menu.Item>\r\n                        <Menu.Item onClick={this.onDeleteClicked}>Delete Pilot</Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, actions)(PilotsListItemMenu);","export const selectContextMenu = state => state.contextMenu;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Portal} from 'react-portal';\r\n\r\nimport ContextMenu from \"./ContextMenu\";\r\n\r\nimport TestContextMenu from \"./TestContextMenu\";\r\nimport PilotsListItemMenu from \"features/pilots/PilotsList/PilotsListItemMenu\";\r\n\r\nimport {selectContextMenu} from \"./contextMenuSelectors\";\r\n\r\nconst menuTypes = {\r\n    TestContextMenu,\r\n    PilotsListItemMenu\r\n};\r\n\r\n\r\nexport function contextMenuManagerMapState(state) {\r\n    return {\r\n        contextMenu : selectContextMenu(state)\r\n    };\r\n}\r\n\r\n\r\nexport class ContextMenuManager extends Component {\r\n\r\n    render() {\r\n        const {contextMenu} = this.props;\r\n        const {show, location, type, menuArgs = {}} = contextMenu;\r\n\r\n        let menu = null;\r\n\r\n        if(show) {\r\n            let MenuComponent = menuTypes[type];\r\n\r\n            if(MenuComponent) {\r\n                menu = (\r\n                    <Portal isOpened={true}>\r\n                        <ContextMenu location={location}>\r\n                            <MenuComponent {...menuArgs} />\r\n                        </ContextMenu>\r\n                    </Portal>\r\n                )\r\n            }\r\n        }\r\n\r\n        return menu;\r\n    }\r\n}\r\n\r\nexport default connect(contextMenuManagerMapState)(ContextMenuManager);","import React, { Component } from 'react';\r\nimport {\r\n    Header,\r\n    Container,\r\n} from \"semantic-ui-react\";\r\n\r\nimport TabBarContainer from \"features/tabs/TabBarContainer\";\r\nimport UnitInfo from \"features/unitInfo/UnitInfo\";\r\nimport Pilots from \"features/pilots/Pilots\";\r\nimport Mechs from \"features/mechs/Mechs\";\r\nimport Tools from \"features/tools/Tools\";\r\nimport ModalManager from \"features/modals/ModalManager\";\r\nimport ContextMenuManager from \"features/contextMenus/ContextMenuManager\";\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const tabs = [\r\n            {name : \"unitInfo\", label : \"Unit Info\", component : UnitInfo,},\r\n            {name : \"pilots\", label : \"Pilots\", component : Pilots,},\r\n            {name : \"mechs\", label : \"Mechs\", component : Mechs,},\r\n            {name : \"tools\", label : \"Tools\", component : Tools},\r\n        ];\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <ModalManager/>\r\n                <ContextMenuManager />\r\n                <div className=\"App-header\">\r\n                    <Header inverted as=\"h1\">Project Mini-Mek</Header>\r\n                </div>\r\n                <Container>\r\n                    <TabBarContainer tabs={tabs} size=\"massive\" />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export function createReducer(initialState, fnMap) {\r\n    return (state = initialState, {type, payload}) => {\r\n        const handler = fnMap[type];\r\n\r\n        return handler ? handler(state, payload) : state;\r\n    };\r\n}\r\n\r\nexport function reduceReducers(...reducers) {\r\n    return (previous, current) =>\r\n        reducers.reduce(\r\n            (p, r) => r(p, current),\r\n            previous\r\n        );\r\n}\r\n\r\n\r\nexport function createConditionalSliceReducer(sliceName, fnMap) {\r\n    // Create a reducer that knows how to handle one slice of state, with these action types\r\n    const sliceReducer = createReducer({}, fnMap);\r\n\r\n    // Create a new wrapping reducer\r\n    return (state, action) => {\r\n        // Check to see if this slice reducer knows how to handle this action\r\n        if(fnMap[action.type]) {\r\n            // If it does, pass the slice to the slice reducer, and update the slice\r\n            return {\r\n                ...state,\r\n                [sliceName] : sliceReducer(state[sliceName], action),\r\n            };\r\n        }\r\n\r\n        // Otherwise, return the existing state unchanged\r\n        return state;\r\n    }\r\n}","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {DATA_LOADED} from \"features/tools/toolConstants\";\r\n\r\nimport orm from \"app/schema\"\r\n\r\nconst initialState = orm.getEmptyState();\r\n\r\nexport function loadData(state, payload) {\r\n    // Create a Redux-ORM session from our entities \"tables\"\r\n    const session = orm.session(state);\r\n    // Get a reference to the correct version of model classes for this Session\r\n    const {Unit, Faction, Pilot, Mech, MechDesign} = session;\r\n\r\n    const {unit, factions, designs} = payload;\r\n\r\n    // Clear out any existing models from state so that we can avoid\r\n    // conflicts from the new data coming in if data is reloaded\r\n    [Unit, Faction, Pilot, Mech, MechDesign].forEach(modelType => {\r\n        modelType.all().toModelArray().forEach(model => model.delete());\r\n    });\r\n\r\n    // Immutably update the session state as we insert items\r\n    Unit.parse(unit);\r\n\r\n    factions.forEach(faction => Faction.parse(faction));\r\n    designs.forEach(design => MechDesign.parse(design));\r\n\r\n    // Return the new \"tables\" object containing the updates\r\n    return session.state;\r\n}\r\n\r\n\r\nexport default createReducer(initialState, {\r\n    [DATA_LOADED] : loadData,\r\n});\r\n","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport orm from \"app/schema\";\r\nconst defaultEditingEntities = orm.getEmptyState();\r\n\r\nexport default createReducer(defaultEditingEntities, {\r\n});","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {TAB_SELECTED} from \"./tabConstants\";\r\n\r\nconst initialState = {\r\n    currentTab : \"unitInfo\",\r\n};\r\n\r\nexport function selectTab(state, payload) {\r\n    return {\r\n        currentTab : payload.tabName,\r\n    };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [TAB_SELECTED] : selectTab,\r\n});","import orm from \"app/schema\";\r\nimport {createConditionalSliceReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {\r\n    UNIT_INFO_UPDATE,\r\n    UNIT_INFO_SET_COLOR,\r\n} from \"./unitInfoConstants\";\r\n\r\n\r\nfunction updateUnitInfo(state, payload) {\r\n    const session = orm.session(state);\r\n    const {Unit} = session;\r\n\r\n    const currentUnit = Unit.all().first();\r\n\r\n    if(currentUnit) {\r\n        currentUnit.update(payload);\r\n    }\r\n\r\n    return session.state;\r\n}\r\n\r\nfunction setUnitColor(state, payload) {\r\n    const {color} = payload;\r\n    const session = orm.session(state);\r\n    const {Unit} = session;\r\n\r\n    const currentUnit = Unit.all().first();\r\n\r\n    if(currentUnit) {\r\n        currentUnit.color = color;\r\n    }\r\n\r\n    return session.state;\r\n}\r\n\r\nexport default createConditionalSliceReducer(\"entities\", {\r\n    [UNIT_INFO_UPDATE] : updateUnitInfo,\r\n    [UNIT_INFO_SET_COLOR] : setUnitColor,\r\n});","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {\r\n    PILOT_SELECT,\r\n    PILOT_EDIT_START,\r\n    PILOT_EDIT_STOP,\r\n} from \"./pilotsConstants\";\r\n\r\nimport {\r\n    ENTITY_DELETE,\r\n} from \"features/entities/entityConstants\";\r\n\r\nconst initialState = {\r\n    currentPilot : null,\r\n    isEditing : false,\r\n};\r\n\r\nexport function selectPilot(state, payload) {\r\n    const prevSelectedPilot = state.currentPilot;\r\n    const newSelectedPilot = payload.currentPilot;\r\n\r\n    const isSamePilot = prevSelectedPilot === newSelectedPilot;\r\n    \r\n    return {\r\n        ...state,\r\n        // Deselect entirely if it's a second click on the same pilot,\r\n        // otherwise go ahead and select the one that was clicked\r\n        currentPilot : isSamePilot ? null : newSelectedPilot,\r\n    };\r\n}\r\n\r\nexport function startEditingPilot(state, payload) {\r\n    return {\r\n        ...state,\r\n        isEditing : true,\r\n    };\r\n}\r\n\r\nexport function stopEditingPilot(state, payload) {\r\n    return {\r\n        ...state,\r\n        isEditing : false,\r\n    };\r\n}\r\n\r\nexport function stopEditingIfDeleted(state, payload) {\r\n    const {itemType, itemID} = payload;\r\n    const {currentPilot} = state;\r\n\r\n    if(itemType === \"Pilot\" && itemID === currentPilot) {\r\n        return {\r\n            ...state,\r\n            isEditing : false,\r\n            currentPilot : null\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default createReducer(initialState, {\r\n    [PILOT_SELECT] : selectPilot,\r\n    [PILOT_EDIT_START] : startEditingPilot,\r\n    [PILOT_EDIT_STOP] : stopEditingPilot,\r\n    [ENTITY_DELETE] : stopEditingIfDeleted,\r\n});","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {MECH_SELECT} from \"./mechsConstants\";\r\n\r\nconst initialState = {\r\n    currentMech : null\r\n};\r\n\r\nexport function selectMech(state, payload) {\r\n    const prevSelectedMech = state.currentMech;\r\n    const newSelectedMech = payload.currentMech;\r\n\r\n    const isSameMech = prevSelectedMech === newSelectedMech;\r\n    \r\n    return {\r\n        // Deselect entirely if it's a second click on the same mech,\r\n        // otherwise go ahead and select the one that was clicked\r\n        currentMech : isSameMech ? null : newSelectedMech,\r\n    };\r\n}\r\n\r\n\r\nexport default createReducer(initialState, {\r\n    [MECH_SELECT] : selectMech,\r\n});","import {\r\n    MODAL_CLOSE,\r\n    MODAL_OPEN\r\n} from \"./modalConstants\";\r\n\r\nimport {createReducer} from \"common/utils/reducerUtils\";\r\n\r\n\r\nconst initialState = [];\r\n\r\n\r\nexport function openModal(state, payload) {\r\n    const {modalType, modalProps} = payload;\r\n    // Always pushing a new modal onto the stack\r\n    return state.concat({modalType, modalProps});\r\n}\r\n\r\nexport function closeModal(state, payload) {\r\n    // Always popping the last modal off the stack\r\n    const newState = state.slice();\r\n    newState.pop();\r\n    return newState;\r\n}\r\n\r\n\r\nexport default createReducer(initialState,  {\r\n    [MODAL_OPEN] : openModal,\r\n    [MODAL_CLOSE] : closeModal\r\n});\r\n","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport {\r\n    CONTEXT_MENU_SHOW,\r\n    CONTEXT_MENU_HIDE,\r\n} from \"./contextMenuConstants\";\r\n\r\n\r\nconst contextMenuInitialState = {\r\n    show : false,\r\n    location : {\r\n        x : null,\r\n        y : null,\r\n    },\r\n    type : null,\r\n    menuArgs : undefined,\r\n}\r\n\r\nfunction showContextMenu(state, payload) {\r\n    return {\r\n        ...state,\r\n        show : true,\r\n        ...payload\r\n    };\r\n}\r\n\r\nfunction hideContextMenu(state, payload) {\r\n    return {\r\n        ...contextMenuInitialState\r\n    }\r\n};\r\n\r\nexport default createReducer(contextMenuInitialState, {\r\n    [CONTEXT_MENU_SHOW] : showContextMenu,\r\n    [CONTEXT_MENU_HIDE] : hideContextMenu\r\n});","import {\r\n    ENTITY_UPDATE,\r\n    ENTITY_DELETE,\r\n    ENTITY_CREATE,\r\n} from \"./entityConstants\";\r\n\r\nimport {createConditionalSliceReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport orm from \"app/schema\";\r\n\r\nexport function updateEntity(state, payload) {\r\n    const {itemType, itemID, newItemAttributes} = payload;\r\n\r\n    const session = orm.session(state);\r\n    const ModelClass = session[itemType];\r\n\r\n    if(ModelClass.hasId(itemID)) {\r\n        const modelInstance = ModelClass.withId(itemID);\r\n\r\n        modelInstance.update(newItemAttributes);\r\n    }\r\n\r\n    return session.state;\r\n}\r\n\r\n\r\nexport function deleteEntity(state, payload) {\r\n    const {itemID, itemType} = payload;\r\n\r\n    const session = orm.session(state);\r\n    const ModelClass = session[itemType];\r\n\r\n    if(ModelClass.hasId(itemID)) {\r\n        const modelInstance = ModelClass.withId(itemID);\r\n\r\n        // The session will immutably update its state reference\r\n        modelInstance.delete();\r\n    }\r\n\r\n    // This will either be the original state object or the updated one\r\n    return session.state;\r\n}\r\n\r\nexport function createEntity(state, payload) {\r\n    const {itemType, newItemAttributes} = payload;\r\n\r\n    const session = orm.session(state);\r\n    const ModelClass = session[itemType];\r\n\r\n    ModelClass.parse(newItemAttributes);\r\n\r\n    return session.state;\r\n}\r\n\r\n\r\nconst entityHandlers = {\r\n    [ENTITY_UPDATE] : updateEntity,\r\n    [ENTITY_CREATE] : createEntity,\r\n    [ENTITY_DELETE] : deleteEntity,\r\n};\r\n\r\nconst entityCrudFeatureReducer = createConditionalSliceReducer(\"entities\", entityHandlers);\r\n\r\nexport default entityCrudFeatureReducer;","export function getModelByType(session, itemType, itemID) {\r\n    const modelClass = session[itemType];\r\n    const model = modelClass.withId(itemID);\r\n    return model;\r\n}\r\n","import orm from \"app/schema\";\r\nimport {getModelByType} from \"common/utils/modelUtils\";\r\n\r\nexport function updateEditingEntitiesState(state, updatedEditingEntities) {\r\n    return {\r\n        ...state,\r\n        editingEntities : updatedEditingEntities,\r\n    };\r\n}\r\n\r\nexport function updateEntitiesState(state, updatedEntities) {\r\n    return {\r\n        ...state,\r\n        entities : updatedEntities,\r\n    };\r\n}\r\n\r\nexport function readEntityData(entities, itemType, itemID) {\r\n    const readSession = orm.session(entities);\r\n\r\n    // Look up the model instance for the requested item\r\n    const model = getModelByType(readSession, itemType, itemID);\r\n    const data = model.toJSON();\r\n\r\n    return data;\r\n}\r\n\r\n","import {createReducer} from \"common/utils/reducerUtils\";\r\n\r\nimport orm from \"app/schema\";\r\n\r\nimport {\r\n    createEntity,\r\n    updateEntity,\r\n    deleteEntity\r\n} from \"features/entities/entityReducer\";\r\n\r\nimport {\r\n    EDIT_ITEM_EXISTING,\r\n    EDIT_ITEM_NEW,\r\n    EDIT_ITEM_UPDATE,\r\n    EDIT_ITEM_APPLY,\r\n    EDIT_ITEM_STOP,\r\n    EDIT_ITEM_RESET,\r\n} from \"./editingConstants\";\r\n\r\nimport {getModelByType} from \"common/utils/modelUtils\";\r\n\r\nimport {selectEntities} from \"features/entities/entitySelectors\";\r\nimport {selectEditingEntities} from \"./editingSelectors\";\r\nimport {\r\n    readEntityData,\r\n    updateEntitiesState,\r\n    updateEditingEntitiesState,\r\n} from \"./editingUtils\";\r\n\r\n\r\n\r\nexport function copyEntity(sourceEntities, destinationEntities, payload) {\r\n    const {itemID, itemType} = payload;\r\n\r\n    const newItemAttributes = readEntityData(sourceEntities, itemType, itemID);\r\n    const creationPayload = {itemType, itemID, newItemAttributes}\r\n\r\n    const updatedEntities = createEntity(destinationEntities, creationPayload);\r\n    return updatedEntities;\r\n}\r\n\r\n\r\n\r\nexport function updateEditedEntity(sourceEntities, destinationEntities, payload) {\r\n    // Start by reading our \"work-in-progress\" data\r\n    const readSession = orm.session(sourceEntities);\r\n\r\n    const {itemType, itemID} = payload;\r\n\r\n    // Look up the model instance for the requested item\r\n    const model = getModelByType(readSession, itemType, itemID);\r\n\r\n\r\n    // We of course will be updating our \"current\" relational data\r\n    let writeSession = orm.session(destinationEntities);\r\n\r\n    const ModelClass = writeSession[itemType];\r\n\r\n    if(ModelClass.hasId(itemID)) {\r\n        // Look up the original Model instance for the top item\r\n        const existingItem = ModelClass.withId(itemID);\r\n\r\n        if(existingItem.updateFrom) {\r\n            // Each model class should know how to properly update itself and its\r\n            // relations from another model of the same type.  Ask the original model to\r\n            // update itself based on the \"work-in-progress\" model. Redux-ORM will apply\r\n            // those changes as we go, and update `session.state` immutably.\r\n            existingItem.updateFrom(model);\r\n        }\r\n    }\r\n    else {\r\n        const itemContents = model.toJSON();\r\n        ModelClass.parse(itemContents);\r\n    }\r\n\r\n    // Return the updated \"current\" relational data.\r\n    return writeSession.state;\r\n}\r\n\r\n\r\n\r\n\r\nexport function editItemExisting(state, payload) {\r\n    const entities = selectEntities(state);\r\n    const editingEntities = selectEditingEntities(state);\r\n\r\n    const updatedEditingEntities = copyEntity(entities, editingEntities, payload);\r\n\r\n    return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\nexport function editItemNew(state, payload) {\r\n    const editingEntities = selectEditingEntities(state);\r\n\r\n    const updatedEditingEntities = createEntity(editingEntities, payload);\r\n    return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\nexport function editItemUpdate(state, payload) {\r\n    const editingEntities = selectEditingEntities(state);\r\n\r\n    const updatedEditingEntities = updateEntity(editingEntities, payload);\r\n    return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\nexport function editItemStop(state, payload) {\r\n    const editingEntities = selectEditingEntities(state);\r\n\r\n    const updatedEditingEntities = deleteEntity(editingEntities, payload);\r\n    return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\n\r\nexport function editItemApply(state, payload) {\r\n    const entities = selectEntities(state);\r\n    const editingEntities = selectEditingEntities(state);\r\n\r\n    const updatedEntities = updateEditedEntity(editingEntities, entities, payload);\r\n    return updateEntitiesState(state, updatedEntities);\r\n}\r\n\r\n\r\nexport function editItemReset(state, payload) {\r\n    const stateWithoutItem = editItemStop(state, payload);\r\n    const stateWithCurrentItem = editItemExisting(stateWithoutItem, payload);\r\n\r\n    return stateWithCurrentItem;\r\n}\r\n\r\n\r\n\r\nconst editingFeatureReducer = createReducer({}, {\r\n    [EDIT_ITEM_EXISTING] : editItemExisting,\r\n    [EDIT_ITEM_NEW] : editItemNew,\r\n    [EDIT_ITEM_UPDATE] : editItemUpdate,\r\n    [EDIT_ITEM_APPLY] : editItemApply,\r\n    [EDIT_ITEM_STOP] : editItemStop,\r\n    [EDIT_ITEM_RESET] : editItemReset,\r\n});\r\n\r\nexport default editingFeatureReducer;\r\n","import {combineReducers} from \"redux\";\r\n\r\nimport {reduceReducers} from \"common/utils/reducerUtils\";\r\n\r\nimport entitiesReducer from \"./entitiesReducer\";\r\nimport editingEntitiesReducer from \"./editingEntitiesReducer\";\r\nimport tabReducer from \"features/tabs/tabReducer\";\r\nimport unitInfoReducer from \"features/unitInfo/unitInfoReducer\";\r\nimport pilotsReducer from \"features/pilots/pilotsReducer\";\r\nimport mechsReducer from \"features/mechs/mechsReducer\";\r\nimport modalsReducer from \"features/modals/modalReducer\";\r\nimport contextMenuReducer from \"features/contextMenus/contextMenuReducer\";\r\n\r\nimport entityCrudReducer from \"features/entities/entityReducer\";\r\nimport editingFeatureReducer from \"features/editing/editingReducer\";\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    entities : entitiesReducer,\r\n    editingEntities : editingEntitiesReducer,\r\n    pilots : pilotsReducer,\r\n    mechs : mechsReducer,\r\n    tabs : tabReducer,\r\n    modals : modalsReducer,\r\n    contextMenu : contextMenuReducer\r\n});\r\n\r\n\r\nconst rootReducer = reduceReducers(\r\n    combinedReducer,\r\n    entityCrudReducer,\r\n    editingFeatureReducer,\r\n    unitInfoReducer,\r\n);\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport \"semantic-ui-css/semantic.css\";\r\n\r\nimport configureStore from \"app/store/configureStore\";\r\nconst store = configureStore();\r\n\r\n// Save a reference to the root element for reuse\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\n// Create a reusable render method that we can call more than once\r\nlet render = () => {\r\n    // Dynamically import our main App component, and render it\r\n    const App = require(\"./app/layout/App\").default;\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        rootEl\r\n    );\r\n};\r\n\r\nif(module.hot) {\r\n    // Support hot reloading of components.\r\n    // Whenever the App component file or one of its dependencies\r\n    // is changed, re-import the updated component and re-render it\r\n    module.hot.accept(\"./app/layout/App\", () => {\r\n        setTimeout(render);\r\n    });\r\n}\r\n\r\nrender();\r\n\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"app/reducers/rootReducer\";\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [thunk];\r\n    const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n    const storeEnhancers = [middlewareEnhancer];\r\n    \r\n    const composedEnhancer = composeWithDevTools(...storeEnhancers);\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composedEnhancer\r\n    );\r\n\r\n    if(process.env.NODE_ENV !== \"production\") {\r\n        if(module.hot) {\r\n            module.hot.accept(\"app/reducers/rootReducer\", () =>{\r\n                const newRootReducer = require(\"app/reducers/rootReducer\").default;\r\n                store.replaceReducer(newRootReducer)\r\n            });\r\n        }\r\n    }\r\n\r\n    return store;\r\n}","export const ENTITY_UPDATE = \"ENTITY_UPDATE\";\r\nexport const ENTITY_CREATE = \"ENTITY_CREATE\";\r\nexport const ENTITY_DELETE = \"ENTITY_DELETE\";","import {createSelector} from \"reselect\";\r\n\r\nimport orm from \"app/schema\";\r\n\r\n\r\nexport const selectEditingEntities = state => state.editingEntities;\r\n\r\nexport const getEditingEntitiesSession = createSelector(\r\n    selectEditingEntities,\r\n    editingEntities => orm.session(editingEntities)\r\n);","export const UNIT_INFO_UPDATE = \"UNIT_INFO_UPDATE\";\r\nexport const UNIT_INFO_SET_COLOR = \"UNIT_INFO_SET_COLOR\";","export const MODAL_OPEN = \"MODAL_OPEN\";\r\nexport const MODAL_CLOSE = \"MODAL_CLOSE\";","export const CONTEXT_MENU_SHOW = \"CONTEXT_MENU_SHOW\";\r\nexport const CONTEXT_MENU_HIDE = \"CONTEXT_MENU_HIDE\";"],"sourceRoot":""}